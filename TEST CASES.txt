TESTPLAN
========

Assignment 
----------
Generate a script that tests the webhooks portion of the V3 SurveyMonkey
API. The script should should be written in Python and cover all methods
for the two endpoints available.


The most important part of the test is to ensure that you have an
appropriate amount of coverage as it pertains to the webhooks resource
and all associated attributes and functionality. Additionally, it is
important to structure and design the script in way that it can be
easily extended to cover additional portions of API.


Assumptions 
-----------
"Happy path" coding sample could be extended to cover off the test cases below.
Automating a survey response is out of scope for this assignment,  A survey response has to be completed manually to see the webhook event data. 


Priority 
[P0] High - must run
[P1] Medium - important
[P2] Low - less important

For /webhhooks endpoint:
(1) Verify HEAD method checks if resource is available [P0]
(2) Verify OPTIONS method returns available methods and options [P0]
(3) Verify GET method returns a list of webhooks [P0]
(4) Verify POST method creates a webhook with valid request arguments [P0]
(5) Verify error when View Webhooks scope has not been requested for GET [P1]
(6) Verify error when Create/Modify Webhooks scope has not been requested for POST [P1]
(7) Verify scenarios that result in 400 Bad Request Errors [P1]
(8) Verify scenarios that result in 401 Authorization Errors [P1]
(9) Verify scenarios that result in 403 Permission Errors [P1]
(10) Verify scenario that result in 404 Resource Not Found [P1]
(11) Verify scenarios that result in 409 Resource Conflict [P1]
(12) Verify scenario that result in 404 User Soft Deleted [P1]
(13) Verify scenario that result in 410 User Deleted  [P1]
(14) Verify scenario that result in 413 Request Entity Too Large [P1]
(15) Verify scenario that result in 429 Rate Limit Reached [P1]
(16) Verify scenario that result in 500 Internal Servicer Error [P1]
(17) Verify scenario that result in 503 Service Unavailable [P1]
(18) Verify pagination fields 'total' and 'links" are returned for the list [P1]
(19)  Verify pagination by setting the page size by using per_page 
[20) Verify option query string for GET can be used and return correct info [P1]
(21) Verify the custom headers are returned [P1]
(22) Verify webhook event data [P0]
(23) Verify Webhook callback events include the ids of resources involved in the event [P0]


For /webhhooks/{id} endpoint: 
(1) Verify HEAD method checks if resource is available [P0]
(2) Verify OPTIONS method returns available methods and options [P0]
(3) Verify GET method returns a webhook [P0]
(4) Verify PATCH method modifies a webhook with valid request arguments [P0]
(5) Verify PUT method replaces a webhook with valid request arguments [P0]
(6) Verify DELETE method creates a webhook with valid request arguments [P0]
(7) Verify the custom headers are returned [P2]
(8) Verify error when View Webhooks scope has not been requested for GET [P1]
(9) Verify error when Create/Modify Webhooks scope has not been requested for PATCH [P1]
(10) Verify error when Create/Modify Webhooks scope has not been requested for PUT [P1]
(11) Verify scenarios that result in 400 Bad Request Errors [P1]
(12) Verify scenarios that result in 401 Authorization Errors [P1]
(13) Verify scenarios that result in 403 Permission Errors [P1]
(14) Verify scenario that result in 404 Resouce Not Found [P1]
(15) Verify scenarios that result in 409 Resource Conflict [P1]
(16) Verify scenario that result in 404 User Soft Deleted P[1}
(17) Verify scenario that result in 410 User Deleted  [P1]
(18) Verify scenario that result in 413 Request Entity Too Large [P1]
(19) Verify scenario that result in 429 Rate Limit Reached [P1]
(20) Verify scenario that result in 500 Internal Servicer Error [P1]
(21) Verify scenario that result in 503 Service Unavailable [P1]
(22) Verify webhook event data [PO]


Notes
-----
* OPTIONS request returns 204 No Content
Doc Bugs:
* 1051/503 error code:  "503 Internal Server Error" s/b "Service Unavailable"
* Typo in Docs "Webooks List Resource" s/b "Webhooks List Resource"
* manually complete the "test webhook fires" survey and confirm that the webhook fires by checking requestbin

    # IMPORTANT: manually clear out the webhooks between runs. 
    #            There appears to be a bug when creating a webhook. If there are multiple surveys with the same name
    #            then creating a webhook returns an error (because the survey names are not unique?) 
    #            Also, deleting a survey does not clear the associated webhooks (by design?).
    
    # TODO: automate survey response and compare the webhook data with the event data